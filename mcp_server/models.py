# generated by fastapi-codegen:
#   filename:  openapi.yaml
#   timestamp: 2025-06-28T13:43:43+00:00

from __future__ import annotations

from datetime import datetime
from enum import Enum
from typing import Any, Dict, List, Optional

from pydantic import BaseModel, Field, RootModel, confloat, conint, constr


class AWSServiceAccessNotEnabledException(RootModel[Any]):
    root: Any


class AccessDeniedException(RootModel[Any]):
    root: Any


class AmazonResourceName(
    RootModel[
        constr(
            pattern=r'arn:aws(-[\w]+)*:*:.+:[0-9]{12}:.+', min_length=1, max_length=1011
        )
    ]
):
    root: constr(
        pattern=r'arn:aws(-[\w]+)*:*:.+:[0-9]{12}:.+', min_length=1, max_length=1011
    )


class AssociateServiceQuotaTemplateRequest(BaseModel):
    pass


class AssociateServiceQuotaTemplateResponse(BaseModel):
    pass


class AwsRegion(
    RootModel[
        constr(pattern=r'[a-zA-Z][a-zA-Z0-9-]{1,128}', min_length=1, max_length=64)
    ]
):
    root: constr(pattern=r'[a-zA-Z][a-zA-Z0-9-]{1,128}', min_length=1, max_length=64)


class CustomerServiceEngagementId(RootModel[str]):
    root: str


class DateTime(RootModel[datetime]):
    root: datetime


class DeleteServiceQuotaIncreaseRequestFromTemplateResponse(BaseModel):
    pass


class DependencyAccessDeniedException(RootModel[Any]):
    root: Any


class DisassociateServiceQuotaTemplateRequest(BaseModel):
    pass


class DisassociateServiceQuotaTemplateResponse(BaseModel):
    pass


class ErrorCode(Enum):
    DEPENDENCY_ACCESS_DENIED_ERROR = 'DEPENDENCY_ACCESS_DENIED_ERROR'
    DEPENDENCY_THROTTLING_ERROR = 'DEPENDENCY_THROTTLING_ERROR'
    DEPENDENCY_SERVICE_ERROR = 'DEPENDENCY_SERVICE_ERROR'
    SERVICE_QUOTA_NOT_AVAILABLE_ERROR = 'SERVICE_QUOTA_NOT_AVAILABLE_ERROR'


class ErrorMessage(RootModel[str]):
    root: str


class ErrorReason(BaseModel):
    ErrorCode_1: Optional[ErrorCode] = Field(None, alias='ErrorCode')
    ErrorMessage_1: Optional[ErrorMessage] = Field(None, alias='ErrorMessage')


class GetAssociationForServiceQuotaTemplateRequest(BaseModel):
    pass


class GlobalQuota(RootModel[bool]):
    root: bool


class IllegalArgumentException(RootModel[Any]):
    root: Any


class InvalidPaginationTokenException(RootModel[Any]):
    root: Any


class InvalidResourceStateException(RootModel[Any]):
    root: Any


class ListTagsForResourceRequest(BaseModel):
    ResourceARN: AmazonResourceName


class MaxResults(RootModel[conint(ge=1, le=100)]):
    root: conint(ge=1, le=100)


class MetricDimensionName(RootModel[str]):
    root: str


class MetricDimensionValue(RootModel[str]):
    root: str


class MetricDimensionsMapDefinition(
    RootModel[Optional[Dict[str, MetricDimensionValue]]]
):
    root: Optional[Dict[str, MetricDimensionValue]] = None


class NextToken(RootModel[constr(pattern=r'^[a-zA-Z0-9/+]*={0,2}$', max_length=2048)]):
    root: constr(pattern=r'^[a-zA-Z0-9/+]*={0,2}$', max_length=2048)


class NoAvailableOrganizationException(RootModel[Any]):
    root: Any


class NoSuchResourceException(RootModel[Any]):
    root: Any


class OrganizationNotInAllFeaturesModeException(RootModel[Any]):
    root: Any


class PeriodUnit(Enum):
    MICROSECOND = 'MICROSECOND'
    MILLISECOND = 'MILLISECOND'
    SECOND = 'SECOND'
    MINUTE = 'MINUTE'
    HOUR = 'HOUR'
    DAY = 'DAY'
    WEEK = 'WEEK'


class PeriodValue(RootModel[int]):
    root: int


class QuotaAdjustable(RootModel[bool]):
    root: bool


class QuotaArn(RootModel[str]):
    root: str


class QuotaCode(
    RootModel[
        constr(pattern=r'[a-zA-Z][a-zA-Z0-9-]{1,128}', min_length=1, max_length=128)
    ]
):
    root: constr(pattern=r'[a-zA-Z][a-zA-Z0-9-]{1,128}', min_length=1, max_length=128)


class QuotaExceededException(RootModel[Any]):
    root: Any


class QuotaMetricName(RootModel[str]):
    root: str


class QuotaMetricNamespace(RootModel[str]):
    root: str


class QuotaName(RootModel[str]):
    root: str


class QuotaPeriod(BaseModel):
    PeriodUnit_1: Optional[PeriodUnit] = Field(None, alias='PeriodUnit')
    PeriodValue_1: Optional[PeriodValue] = Field(None, alias='PeriodValue')


class QuotaUnit(RootModel[str]):
    root: str


class QuotaValue(RootModel[confloat(ge=0.0, le=10000000000.0)]):
    root: confloat(ge=0.0, le=10000000000.0)


class RequestId(
    RootModel[
        constr(pattern=r'[0-9a-zA-Z][a-zA-Z0-9-]{1,128}', min_length=1, max_length=128)
    ]
):
    root: constr(
        pattern=r'[0-9a-zA-Z][a-zA-Z0-9-]{1,128}', min_length=1, max_length=128
    )


class RequestStatus(Enum):
    PENDING = 'PENDING'
    CASE_OPENED = 'CASE_OPENED'
    APPROVED = 'APPROVED'
    DENIED = 'DENIED'
    CASE_CLOSED = 'CASE_CLOSED'


class Requester(RootModel[str]):
    root: str


class ResourceAlreadyExistsException(RootModel[Any]):
    root: Any


class ServiceCode(
    RootModel[
        constr(pattern=r'[a-zA-Z][a-zA-Z0-9-]{1,63}', min_length=1, max_length=63)
    ]
):
    root: constr(pattern=r'[a-zA-Z][a-zA-Z0-9-]{1,63}', min_length=1, max_length=63)


class ServiceException(RootModel[Any]):
    root: Any


class ServiceName(RootModel[str]):
    root: str


class ServiceQuotaIncreaseRequestInTemplate(BaseModel):
    AwsRegion_1: Optional[AwsRegion] = Field(None, alias='AwsRegion')
    DesiredValue: Optional[QuotaValue] = None
    GlobalQuota_1: Optional[GlobalQuota] = Field(None, alias='GlobalQuota')
    QuotaCode_1: Optional[QuotaCode] = Field(None, alias='QuotaCode')
    QuotaName_1: Optional[QuotaName] = Field(None, alias='QuotaName')
    ServiceCode_1: Optional[ServiceCode] = Field(None, alias='ServiceCode')
    ServiceName_1: Optional[ServiceName] = Field(None, alias='ServiceName')
    Unit: Optional[QuotaUnit] = None


class ServiceQuotaIncreaseRequestInTemplateList(
    RootModel[List[ServiceQuotaIncreaseRequestInTemplate]]
):
    root: List[ServiceQuotaIncreaseRequestInTemplate]


class ServiceQuotaTemplateAssociationStatus(Enum):
    ASSOCIATED = 'ASSOCIATED'
    DISASSOCIATED = 'DISASSOCIATED'


class ServiceQuotaTemplateNotInUseException(RootModel[Any]):
    root: Any


class Statistic(
    RootModel[constr(pattern=r'(Sum|Maximum)', min_length=1, max_length=256)]
):
    root: constr(pattern=r'(Sum|Maximum)', min_length=1, max_length=256)


class TagKey(
    RootModel[
        constr(pattern=r'^([\p{L}\p{Z}\p{N}_.:/=+\-@]*)$', min_length=1, max_length=128)
    ]
):
    root: constr(
        pattern=r'^([\p{L}\p{Z}\p{N}_.:/=+\-@]*)$', min_length=1, max_length=128
    )


class TagPolicyViolationException(RootModel[Any]):
    root: Any


class TagResourceResponse(BaseModel):
    pass


class TagValue(
    RootModel[
        constr(pattern=r'^([\p{L}\p{Z}\p{N}_.:/=+\-@]*)$', min_length=0, max_length=256)
    ]
):
    root: constr(
        pattern=r'^([\p{L}\p{Z}\p{N}_.:/=+\-@]*)$', min_length=0, max_length=256
    )


class TemplatesNotAvailableInRegionException(RootModel[Any]):
    root: Any


class TooManyRequestsException(RootModel[Any]):
    root: Any


class TooManyTagsException(RootModel[Any]):
    root: Any


class UntagResourceResponse(BaseModel):
    pass


class XAmzTarget(Enum):
    ServiceQuotasV20190624_AssociateServiceQuotaTemplate = (
        'ServiceQuotasV20190624.AssociateServiceQuotaTemplate'
    )


class XAmzTarget1(Enum):
    ServiceQuotasV20190624_DeleteServiceQuotaIncreaseRequestFromTemplate = (
        'ServiceQuotasV20190624.DeleteServiceQuotaIncreaseRequestFromTemplate'
    )


class XAmzTarget2(Enum):
    ServiceQuotasV20190624_DisassociateServiceQuotaTemplate = (
        'ServiceQuotasV20190624.DisassociateServiceQuotaTemplate'
    )


class XAmzTarget3(Enum):
    ServiceQuotasV20190624_GetAWSDefaultServiceQuota = (
        'ServiceQuotasV20190624.GetAWSDefaultServiceQuota'
    )


class XAmzTarget4(Enum):
    ServiceQuotasV20190624_GetAssociationForServiceQuotaTemplate = (
        'ServiceQuotasV20190624.GetAssociationForServiceQuotaTemplate'
    )


class XAmzTarget5(Enum):
    ServiceQuotasV20190624_GetRequestedServiceQuotaChange = (
        'ServiceQuotasV20190624.GetRequestedServiceQuotaChange'
    )


class XAmzTarget6(Enum):
    ServiceQuotasV20190624_GetServiceQuota = 'ServiceQuotasV20190624.GetServiceQuota'


class XAmzTarget7(Enum):
    ServiceQuotasV20190624_GetServiceQuotaIncreaseRequestFromTemplate = (
        'ServiceQuotasV20190624.GetServiceQuotaIncreaseRequestFromTemplate'
    )


class XAmzTarget8(Enum):
    ServiceQuotasV20190624_ListAWSDefaultServiceQuotas = (
        'ServiceQuotasV20190624.ListAWSDefaultServiceQuotas'
    )


class XAmzTarget9(Enum):
    ServiceQuotasV20190624_ListRequestedServiceQuotaChangeHistory = (
        'ServiceQuotasV20190624.ListRequestedServiceQuotaChangeHistory'
    )


class XAmzTarget10(Enum):
    ServiceQuotasV20190624_ListRequestedServiceQuotaChangeHistoryByQuota = (
        'ServiceQuotasV20190624.ListRequestedServiceQuotaChangeHistoryByQuota'
    )


class XAmzTarget11(Enum):
    ServiceQuotasV20190624_ListServiceQuotaIncreaseRequestsInTemplate = (
        'ServiceQuotasV20190624.ListServiceQuotaIncreaseRequestsInTemplate'
    )


class XAmzTarget12(Enum):
    ServiceQuotasV20190624_ListServiceQuotas = (
        'ServiceQuotasV20190624.ListServiceQuotas'
    )


class XAmzTarget13(Enum):
    ServiceQuotasV20190624_ListServices = 'ServiceQuotasV20190624.ListServices'


class XAmzTarget14(Enum):
    ServiceQuotasV20190624_ListTagsForResource = (
        'ServiceQuotasV20190624.ListTagsForResource'
    )


class XAmzTarget15(Enum):
    ServiceQuotasV20190624_PutServiceQuotaIncreaseRequestIntoTemplate = (
        'ServiceQuotasV20190624.PutServiceQuotaIncreaseRequestIntoTemplate'
    )


class XAmzTarget16(Enum):
    ServiceQuotasV20190624_RequestServiceQuotaIncrease = (
        'ServiceQuotasV20190624.RequestServiceQuotaIncrease'
    )


class XAmzTarget17(Enum):
    ServiceQuotasV20190624_TagResource = 'ServiceQuotasV20190624.TagResource'


class XAmzTarget18(Enum):
    ServiceQuotasV20190624_UntagResource = 'ServiceQuotasV20190624.UntagResource'


class DeleteServiceQuotaIncreaseRequestFromTemplateRequest(BaseModel):
    AwsRegion_1: AwsRegion = Field(..., alias='AwsRegion')
    QuotaCode_1: QuotaCode = Field(..., alias='QuotaCode')
    ServiceCode_1: ServiceCode = Field(..., alias='ServiceCode')


class GetAWSDefaultServiceQuotaRequest(BaseModel):
    QuotaCode_1: QuotaCode = Field(..., alias='QuotaCode')
    ServiceCode_1: ServiceCode = Field(..., alias='ServiceCode')


class GetAssociationForServiceQuotaTemplateResponse(BaseModel):
    ServiceQuotaTemplateAssociationStatus_1: Optional[
        ServiceQuotaTemplateAssociationStatus
    ] = Field(None, alias='ServiceQuotaTemplateAssociationStatus')


class GetRequestedServiceQuotaChangeRequest(BaseModel):
    RequestId_1: RequestId = Field(..., alias='RequestId')


class GetServiceQuotaIncreaseRequestFromTemplateRequest(BaseModel):
    AwsRegion_1: AwsRegion = Field(..., alias='AwsRegion')
    QuotaCode_1: QuotaCode = Field(..., alias='QuotaCode')
    ServiceCode_1: ServiceCode = Field(..., alias='ServiceCode')


class GetServiceQuotaIncreaseRequestFromTemplateResponse(BaseModel):
    ServiceQuotaIncreaseRequestInTemplate_1: Optional[
        ServiceQuotaIncreaseRequestInTemplate
    ] = Field(None, alias='ServiceQuotaIncreaseRequestInTemplate')


class GetServiceQuotaRequest(BaseModel):
    QuotaCode_1: QuotaCode = Field(..., alias='QuotaCode')
    ServiceCode_1: ServiceCode = Field(..., alias='ServiceCode')


class InputTagKeys(RootModel[List[TagKey]]):
    root: List[TagKey]


class ListAWSDefaultServiceQuotasRequest(BaseModel):
    MaxResults_1: Optional[MaxResults] = Field(None, alias='MaxResults')
    NextToken_1: Optional[NextToken] = Field(None, alias='NextToken')
    ServiceCode_1: ServiceCode = Field(..., alias='ServiceCode')


class ListRequestedServiceQuotaChangeHistoryByQuotaRequest(BaseModel):
    MaxResults_1: Optional[MaxResults] = Field(None, alias='MaxResults')
    NextToken_1: Optional[NextToken] = Field(None, alias='NextToken')
    QuotaCode_1: QuotaCode = Field(..., alias='QuotaCode')
    ServiceCode_1: ServiceCode = Field(..., alias='ServiceCode')
    Status: Optional[RequestStatus] = None


class ListRequestedServiceQuotaChangeHistoryRequest(BaseModel):
    MaxResults_1: Optional[MaxResults] = Field(None, alias='MaxResults')
    NextToken_1: Optional[NextToken] = Field(None, alias='NextToken')
    ServiceCode_1: Optional[ServiceCode] = Field(None, alias='ServiceCode')
    Status: Optional[RequestStatus] = None


class ListServiceQuotaIncreaseRequestsInTemplateRequest(BaseModel):
    AwsRegion_1: Optional[AwsRegion] = Field(None, alias='AwsRegion')
    MaxResults_1: Optional[MaxResults] = Field(None, alias='MaxResults')
    NextToken_1: Optional[NextToken] = Field(None, alias='NextToken')
    ServiceCode_1: Optional[ServiceCode] = Field(None, alias='ServiceCode')


class ListServiceQuotaIncreaseRequestsInTemplateResponse(BaseModel):
    NextToken_1: Optional[NextToken] = Field(None, alias='NextToken')
    ServiceQuotaIncreaseRequestInTemplateList_1: Optional[
        ServiceQuotaIncreaseRequestInTemplateList
    ] = Field(None, alias='ServiceQuotaIncreaseRequestInTemplateList')


class ListServiceQuotasRequest(BaseModel):
    MaxResults_1: Optional[MaxResults] = Field(None, alias='MaxResults')
    NextToken_1: Optional[NextToken] = Field(None, alias='NextToken')
    ServiceCode_1: ServiceCode = Field(..., alias='ServiceCode')


class ListServicesRequest(BaseModel):
    MaxResults_1: Optional[MaxResults] = Field(None, alias='MaxResults')
    NextToken_1: Optional[NextToken] = Field(None, alias='NextToken')


class MetricInfo(BaseModel):
    MetricDimensions: Optional[MetricDimensionsMapDefinition] = None
    MetricName: Optional[QuotaMetricName] = None
    MetricNamespace: Optional[QuotaMetricNamespace] = None
    MetricStatisticRecommendation: Optional[Statistic] = None


class PutServiceQuotaIncreaseRequestIntoTemplateRequest(BaseModel):
    AwsRegion_1: AwsRegion = Field(..., alias='AwsRegion')
    DesiredValue: QuotaValue
    QuotaCode_1: QuotaCode = Field(..., alias='QuotaCode')
    ServiceCode_1: ServiceCode = Field(..., alias='ServiceCode')


class PutServiceQuotaIncreaseRequestIntoTemplateResponse(BaseModel):
    ServiceQuotaIncreaseRequestInTemplate_1: Optional[
        ServiceQuotaIncreaseRequestInTemplate
    ] = Field(None, alias='ServiceQuotaIncreaseRequestInTemplate')


class RequestServiceQuotaIncreaseRequest(BaseModel):
    DesiredValue: QuotaValue
    QuotaCode_1: QuotaCode = Field(..., alias='QuotaCode')
    ServiceCode_1: ServiceCode = Field(..., alias='ServiceCode')


class RequestedServiceQuotaChange(BaseModel):
    CaseId: Optional[CustomerServiceEngagementId] = None
    Created: Optional[DateTime] = None
    DesiredValue: Optional[QuotaValue] = None
    GlobalQuota_1: Optional[GlobalQuota] = Field(None, alias='GlobalQuota')
    Id: Optional[RequestId] = None
    LastUpdated: Optional[DateTime] = None
    QuotaArn_1: Optional[QuotaArn] = Field(None, alias='QuotaArn')
    QuotaCode_1: Optional[QuotaCode] = Field(None, alias='QuotaCode')
    QuotaName_1: Optional[QuotaName] = Field(None, alias='QuotaName')
    Requester_1: Optional[Requester] = Field(None, alias='Requester')
    ServiceCode_1: Optional[ServiceCode] = Field(None, alias='ServiceCode')
    ServiceName_1: Optional[ServiceName] = Field(None, alias='ServiceName')
    Status: Optional[RequestStatus] = None
    Unit: Optional[QuotaUnit] = None


class RequestedServiceQuotaChangeHistoryListDefinition(
    RootModel[List[RequestedServiceQuotaChange]]
):
    root: List[RequestedServiceQuotaChange]


class ServiceInfo(BaseModel):
    ServiceCode_1: Optional[ServiceCode] = Field(None, alias='ServiceCode')
    ServiceName_1: Optional[ServiceName] = Field(None, alias='ServiceName')


class ServiceInfoListDefinition(RootModel[List[ServiceInfo]]):
    root: List[ServiceInfo]


class ServiceQuota(BaseModel):
    Adjustable: Optional[QuotaAdjustable] = None
    ErrorReason_1: Optional[ErrorReason] = Field(None, alias='ErrorReason')
    GlobalQuota_1: Optional[GlobalQuota] = Field(None, alias='GlobalQuota')
    Period: Optional[QuotaPeriod] = None
    QuotaArn_1: Optional[QuotaArn] = Field(None, alias='QuotaArn')
    QuotaCode_1: Optional[QuotaCode] = Field(None, alias='QuotaCode')
    QuotaName_1: Optional[QuotaName] = Field(None, alias='QuotaName')
    ServiceCode_1: Optional[ServiceCode] = Field(None, alias='ServiceCode')
    ServiceName_1: Optional[ServiceName] = Field(None, alias='ServiceName')
    Unit: Optional[QuotaUnit] = None
    UsageMetric: Optional[MetricInfo] = None
    Value: Optional[QuotaValue] = None


class ServiceQuotaListDefinition(RootModel[List[ServiceQuota]]):
    root: List[ServiceQuota]


class Tag(BaseModel):
    Key: TagKey
    Value: TagValue


class UntagResourceRequest(BaseModel):
    ResourceARN: AmazonResourceName
    TagKeys: InputTagKeys


class GetAWSDefaultServiceQuotaResponse(BaseModel):
    Quota: Optional[ServiceQuota] = None


class GetRequestedServiceQuotaChangeResponse(BaseModel):
    RequestedQuota: Optional[RequestedServiceQuotaChange] = None


class GetServiceQuotaResponse(BaseModel):
    Quota: Optional[ServiceQuota] = None


class InputTags(RootModel[List[Tag]]):
    root: List[Tag] = Field(..., min_length=1)


class ListAWSDefaultServiceQuotasResponse(BaseModel):
    NextToken_1: Optional[NextToken] = Field(None, alias='NextToken')
    Quotas: Optional[ServiceQuotaListDefinition] = None


class ListRequestedServiceQuotaChangeHistoryByQuotaResponse(BaseModel):
    NextToken_1: Optional[NextToken] = Field(None, alias='NextToken')
    RequestedQuotas: Optional[RequestedServiceQuotaChangeHistoryListDefinition] = None


class ListRequestedServiceQuotaChangeHistoryResponse(BaseModel):
    NextToken_1: Optional[NextToken] = Field(None, alias='NextToken')
    RequestedQuotas: Optional[RequestedServiceQuotaChangeHistoryListDefinition] = None


class ListServiceQuotasResponse(BaseModel):
    NextToken_1: Optional[NextToken] = Field(None, alias='NextToken')
    Quotas: Optional[ServiceQuotaListDefinition] = None


class ListServicesResponse(BaseModel):
    NextToken_1: Optional[NextToken] = Field(None, alias='NextToken')
    Services: Optional[ServiceInfoListDefinition] = None


class OutputTags(RootModel[List[Tag]]):
    root: List[Tag] = Field(..., max_length=200)


class RequestServiceQuotaIncreaseResponse(BaseModel):
    RequestedQuota: Optional[RequestedServiceQuotaChange] = None


class TagResourceRequest(BaseModel):
    ResourceARN: AmazonResourceName
    Tags: InputTags


class ListTagsForResourceResponse(BaseModel):
    Tags: Optional[OutputTags] = None
